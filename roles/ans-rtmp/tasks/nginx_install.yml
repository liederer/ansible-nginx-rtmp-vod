---
# tasks file for ans-rtmp

- include: user.yml
- include: directories.yml

- name: Nginx | Install dependencies to build Nginx
  apt: pkg={{ item }} state=present update_cache=true
  with_items:
    - dpkg-dev
    - build-essential
    - libpcre3
    - libpcre3-dev
    - libssl-dev
    - unzip

- name: Nginx | Download the Nginx source release if not yet present
  get_url:
    url: "{{nginx_source_url}}"
    dest: "/tmp/nginx-{{nginx_source_version}}.tar.gz"

- name: Nginx | Unpack the compressed Nginx source
  command: tar -xvzf /tmp/nginx-{{nginx_source_version}}.tar.gz
           chdir=/tmp creates=/tmp/nginx-{{nginx_source_version}}/README

- name: RTMP | Download the RTMP source
  get_url:
    url: "https://github.com/arut/nginx-rtmp-module/archive/master.zip"
    dest: "/tmp/master.zip"

- name: RTMP | Unpack the compressed rtmp source
  command: unzip /tmp/master.zip
           chdir=/tmp creates=/tmp/nginx-rtmp-module-master/README.md

- name: Nginx | Write out the version and flags used for the build
  template:
    src: nginx_compilation_flags.j2
    dest: "{{nginx_dir}}/.nginx_compilation_flags"
  register: nginx_flags

- name: Nginx | Compile the Nginx source
  shell: >
    cd /tmp/nginx-{{nginx_source_version}} &&
    ./configure {{nginx_source_configure_flags}} &&
    make &&
    make install
  when: nginx_flags.changed

- name: Nginx | Install the upstart init script
  template:
    src: nginx.init.j2
    dest: /etc/init.d/nginx
    owner: root
    group: root
    mode: 0755
  notify:
    - restart nginx

- name: Nginx | Register Nginx as a service
  service:
    name: nginx
    enabled: yes
